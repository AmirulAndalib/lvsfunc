from typing import Any

PY3: bool
PY34: bool
__pyx_unpickle_excepts: Any
_flip: Any
_restore_curry: Any
apply: Any
compose: Any
compose_left: Any
dedent: Any
do: Any
flip: Any
has_keywords: Any
has_varargs: Any
identity: Any
import_module: Any
instanceproperty: Any
is_arity: Any
is_partial_args: Any
is_valid_args: Any
juxt: Any
memoize: Any
no_default: str
num_required_args: Any
pipe: Any
return_none: Any
thread_first: Any
thread_last: Any

def reduce(*args, **kwargs) -> Any: ...

class Compose:
    first: Any = ...
    funcs: Any = ...
    __name__: Any = ...
    __signature__: Any = ...
    __wrapped__: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def __call__(self, *args, **kwargs) -> Any: ...
    def __eq__(self, other) -> Any: ...
    def __ge__(self, other) -> Any: ...
    def __get__(self, instance, owner) -> Any: ...
    def __gt__(self, other) -> Any: ...
    def __hash__(self) -> Any: ...
    def __le__(self, other) -> Any: ...
    def __lt__(self, other) -> Any: ...
    def __ne__(self, other) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class InstanceProperty(property):
    __init__: Any = ...
    __get__: Any = ...
    __reduce__: Any = ...

class MethodType:
    __func__: Any = ...
    __self__: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def __call__(self, *args, **kwargs) -> Any: ...
    def __delattr__(self, name) -> Any: ...
    def __eq__(self, other) -> Any: ...
    def __ge__(self, other) -> Any: ...
    def __get__(self, instance, owner) -> Any: ...
    def __gt__(self, other) -> Any: ...
    def __hash__(self) -> Any: ...
    def __le__(self, other) -> Any: ...
    def __lt__(self, other) -> Any: ...
    def __ne__(self, other) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setattr__(self, name, value) -> Any: ...

class _juxt_inner:
    funcs: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def __call__(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...

class _memoize:
    __name__: Any = ...
    __wrapped__: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def __call__(self, *args, **kwargs) -> Any: ...
    def __get__(self, instance, owner) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class attrgetter:
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def __call__(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...

class complement:
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def __call__(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...

class curry:
    _has_unknown_args: Any = ...
    _sigspec: Any = ...
    args: Any = ...
    func: Any = ...
    keywords: Any = ...
    __name__: Any = ...
    __qualname__: Any = ...
    __signature__: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def _should_curry(self, args, kwargs, exc = ...) -> Any: ...
    def _should_curry_internal(self, args, kwargs, exc = ...) -> Any: ...
    def bind(self, *args, **kwargs) -> Any: ...
    def call(self, *args, **kwargs) -> Any: ...
    def __call__(self, *args, **kwargs) -> Any: ...
    def __eq__(self, other) -> Any: ...
    def __ge__(self, other) -> Any: ...
    def __get__(self, instance, owner) -> Any: ...
    def __gt__(self, other) -> Any: ...
    def __hash__(self) -> Any: ...
    def __le__(self, other) -> Any: ...
    def __lt__(self, other) -> Any: ...
    def __ne__(self, other) -> Any: ...
    def __reduce__(self) -> Any: ...

class excepts:
    exc: Any = ...
    func: Any = ...
    handler: Any = ...
    __name__: Any = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def __call__(self, *args, **kwargs) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setstate__(self, state) -> Any: ...

class ifilter:
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def __iter__(self) -> Any: ...
    def __next__(self) -> Any: ...
    def __reduce__(self) -> Any: ...

class imap:
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def __iter__(self) -> Any: ...
    def __next__(self) -> Any: ...
    def __reduce__(self) -> Any: ...

class partial:
    args: Any = ...
    func: Any = ...
    keywords: Any = ...
    @classmethod
    def __init__(self, *args, **kwargs) -> None: ...
    def __call__(self, *args, **kwargs) -> Any: ...
    def __delattr__(self, name) -> Any: ...
    def __reduce__(self) -> Any: ...
    def __setattr__(self, name, value) -> Any: ...
    def __setstate__(self, state) -> Any: ...
